var compareJson=function(e,n,t){"use strict";const s=(e,n)=>{let{cb:t,deepCount:r,keys:a,parentKey:o,values:i}=n??{};r?r++:r=0,a??=[],i??=[],o??="";for(const n in e){if(!e.hasOwnProperty(n))continue;const c=e[n],u=o?`${o},${n}`:n;i.push(c),a.includes(u)||a.push(u),"function"==typeof t&&t(n,c,r,o),"object"==typeof c&&null!==c&&s(c,{cb:t,deepCount:r,keys:a,parentKey:u})}},r=(e,n="utf8")=>new Promise(((s,r)=>{t.readFile(e,n,((e,n)=>{e?r(e):s(n)}))})),a=e=>new Promise(((s,a)=>{t.readdir(e,((t,o)=>{if(t)a(t);else{const t=o.map((async t=>{const s=n.join(e,t),a=await r(s);return{name:t,path:e,data:a}}));s(Promise.all(t))}}))}));var o=Object.freeze({__proto__:null,default:async e=>e.endsWith(".json")||e.endsWith(".xlsx")||e.endsWith(".csv")?await r(e):await a(e),readDir:a,readFile:r});return e.fileOrDir=o,e.jsonKeys=e=>{const n=[];return s(e,{keys:n}),n},e.traverseJson=s,e}({},path,fs);
